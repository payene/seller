<?php

namespace AppBundle\Repository;


use AppBundle\Entity\Arrivage;
use AppBundle\Entity\Article;
use AppBundle\Entity\Category;
use UserBundle\Entity\User;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArrivageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 **/

class ArrivageRepository extends \Doctrine\ORM\EntityRepository
{
	public function getArrivages( $currentPage=1, Article $article = null, Category $category = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, User $user)
	{
		$query = $this->createQueryBuilder('a')
					 ->join('a.article','art')
                     ->join('art.category', 'c')
              //       ->andwhere("a.createdBy = :user ")
              //       ->setParameter('user', $user)
                     ;        

        if(!empty($dateDebSearch)  && !empty($dateFinSearch))
        {
             $query->andWhere("a.createdAt BETWEEN :dateDeb AND :dateFin")
                             ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00" );
        }
       
        if(!empty($article))
        {
           $query->andWhere('art.id = :article')
                            ->setParameter('article', $article->getId());
        }           

        if(!empty($category))
        {
             $query->andWhere('c.id = :category')
                            ->setParameter('category', $category);
        }  

       return $query->orderBy('a.createdAt', 'DESC')->getQuery()->getResult();

	    // return $this->paginate($query, $currentPage);   
	}

	public function countArrivages( Article $article = null, Category $category = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, User $user)
	{
		$query = $this->createQueryBuilder('a')
					 ->join('a.article','art')
                     ->join('art.category', 'c')
                     // ->andwhere("a.createdBy = :user ")
                     // ->setParameter('user', $user)
                     ;
                         

        
        if(!empty($dateDebSearch)  && !empty($dateFinSearch))
        {
             $query->andWhere("a.createdAt BETWEEN :dateDeb AND :dateFin")
                             ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00" );
        }
       
        if(!empty($article))
        {
           $query->andWhere('art.id = :article')
                            ->setParameter('article', $article->getId());
        }           

        if(!empty($category))
        {
             $query->andWhere('c.id = :category')
                            ->setParameter('category', $category);
        }  

       $query->orderBy('a.id', 'DESC');

        $result = $query->getQuery()
            	 ->getResult();
        
        return count($result);
	}


	public function paginate($dql, $page = 1, $limit = 10)
	{
	    $paginator = new Paginator($dql);

	    $paginator->getQuery()
		        ->setFirstResult($limit * ($page - 1)) // Offset
		        ->setMaxResults($limit); // Limit

	    return $paginator;
	}

}
