<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Client;
use AppBundle\Entity\Vente;
use AppBundle\Entity\Article;
use UserBundle\Entity\User;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\QueryBuilder ;


/**
 * LigneVenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VenteRepository extends \Doctrine\ORM\EntityRepository
{

	
   /* public function getLignesVente(){
        return $query = $this->_em
        ->createQueryBuilder()
        ->select('lv')
        ->from('AppBundle:LigneVente', 'lv')
        ->where("lv.id IN [125,124]")
        ->getQuery()->getResult();

    }*/


    public function getVentes(QueryBuilder $query, $currentPage=1, Client $client = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null)
	{
         $query->select('v')
               ->from('AppBundle:Vente', 'v');

        if($dateDebSearch!=null && $dateFinSearch!=null)
        {
           $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                    ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                    ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00");
        }

        if(!empty($client))
        {
           $query->join('v.client','c')
                  ->andWhere('c  = :client')
                  ->setParameter('client', $client);
        }   	        

        $query->orderBy('v.createdAt', 'DESC');

	    return $this->paginate($query, $currentPage);
	}


	public function paginate($dql, $page = 1, $limit = 10)
	{
	    $paginator = new Paginator($dql);

	    $paginator->getQuery()
		        ->setFirstResult($limit * ($page - 1)) // Offset
		        ->setMaxResults($limit); // Limit

	    return $paginator;
	}

    public function countVentesTotal(QueryBuilder $query, Client $client = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null)
    {
       $v = $this->createQueryBuilder('v');
        
        if($dateDebSearch!=null && $dateFinSearch!=null)
        {
           $v->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                    ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00");
        }

        if(!empty($client))
        {
           $v->join('v.client','c')
                  ->andWhere('c  = :client')
                  ->setParameter('client', $client);
        }               

        $v->getQuery()
            	 ->getResult();
                 dump($v);
        
        return count($v);
    }

    /*==================================*/
    public function getVentesAvecEnCours($currentPage=1)
    {
    	$query = $this->createQueryBuilder('v')
                     // ->where("v.createdBy = :user ")
                     // ->setParameter('user', $this->getUser())
                     ->andWhere("v.resteAPayer > 0 ")
                     // ->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                     // ->setParameter('dateDeb',  new \DateTime(date('Y-m-d'). ' 00:00:00')  )
                     // ->setParameter('dateFin', new \DateTime(date('Y-m-d'). ' 23:59:59') )
                    ->orderBy('v.createdAt', 'DESC');

	    $paginator = $this->paginate($query, $currentPage);

	    return $paginator;                     
    }

    public function countVentesTotalAvecEnCours()
    {
		$v = $this->createQueryBuilder('v')
                     ->andWhere("v.resteAPayer > 0 ")
                     ->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                     ->setParameter('dateDeb',  new \DateTime(date('Y-m-d'). ' 00:00:00')  )
                     ->setParameter('dateFin', new \DateTime(date('Y-m-d'). ' 23:59:59') )
                     ->getQuery()
            	     ->getResult();

		return count($v);
    }

    /*=================================*/
    public function getVentesAvecRappel($currentPage=1, Client $client = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, Vente $vente = null)
    {

        $query = $this->createQueryBuilder('v')
                         // ->where("v.createdBy = :user ")
                         // ->setParameter('user', $this->getUser())
                         ->where("v.resteAPayer > 0 ");

        if($dateDebSearch!=null && $dateFinSearch!=null)
        {
            $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                            ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00");
        }

        if(!empty($client ))
        {
            $query->andWhere('v.client = :client')
                            ->setParameter('client', $client);
        }           

        if(!empty($vente ))
        {
            $query->andWhere('v .id = :vente')
                            ->setParameter('vente', $vente );
        }     

        $query->orderBy('v.id','desc');      

        $paginator = $this->paginate($query, $currentPage);

    	return $paginator;        

    }

    public function countVentesAvecRappel( Client $client = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, Vente $vente = null)
    {
    	 $query = $this->createQueryBuilder('v')
                             // ->where("v.createdBy = :user ")
                             // ->setParameter('user', $this->getUser())
                             ->where("v.resteAPayer > 0 ");

            if($dateDebSearch!=null && $dateFinSearch!=null)
            {
                $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                                ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00");
            }
          
            if(!empty($client) )
            {
                $query->andWhere('v.client = :client')
                                ->setParameter('client', $client);
            }           

            if(!empty($vente) )
            {
                $query->andWhere('v.id = :vente')
                                ->setParameter('vente', $vente );
            }           

		return count($query->getQuery() ->getResult());    
    }

    /*===========================================================*/
    public function getStatistiquesParClt($currentPage=1, Client $client = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, User $user)
    {

        $query = $this->_em
        			  ->createQueryBuilder()
                         ->select('v')
                         ->from('AppBundle:Vente', 'v')
                         ->join('v.client','c')
                          ->where("v.createdBy = :user ")
                          ->setParameter('user', $user)
                          ->orderBy('v.id','desc');

        if($dateDebSearch=!null && $dateFinSearch!=null)
        {
            $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                                 ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00" );
        }


        if( !empty($client) )
        { 
            $query->andWhere('c.id = :client')
                            ->setParameter('client', $client);
        }

        $paginator = $this->paginate($query, $currentPage);

    	return $paginator;                

    }

    public function countStatistiquesParClt(Client $client = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, User $user)
    {
		$query = $this->_em
				      ->createQueryBuilder()
                         ->select('v')
                         ->from('AppBundle:Vente', 'v')
                         ->join('v.client','c')
                         ->where("v.createdBy = :user ")
                         ->setParameter('user', $user);

        if($dateDebSearch!=null && $dateFinSearch!=null)
        {
            $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                                ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00" );
        }

        if(!empty($client))
        {
            $query->andWhere('v.id = :client')
                            ->setParameter('client', $client);
        }

        return count($query->getQuery() ->getResult());  
    }


    /*======================================================*/
     public function getStatistiquesParArt($currentPage=1, Article $article = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, User $user)
     {

        $query = $this->_em
    			  ->createQueryBuilder()
                         ->select('lv')
                         ->from('AppBundle:LigneVente', 'lv')
                         ->join('lv.article','a')
                         ->join('lv.vente','v')
                         ->where("v.createdBy = :user ")
                         ->setParameter('user', $user);



        if($dateDebSearch!=null && $dateFinSearch!=null)
        {
            $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                              ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00" );
        }           

        if( !empty( $article ))
        {
           $query->andWhere('a = :article')
                            ->setParameter('article',  $article );
        }  
    	//$query->orderBy('lv.vente','desc');

    	$paginator = $this->paginate($query, $currentPage);

    	return $paginator;     

     }

     public function countStatistiquesParArt(Article $article = null,\Datetime $dateDebSearch =null,\Datetime $dateFinSearch =null, User $user)
     {
     	    $query = $this->_em
    			  ->createQueryBuilder()
                         ->select('lv')
                         ->from('AppBundle:LigneVente', 'lv')
                         ->join('lv.article','a')
                         ->join('lv.vente','v')
                         ->where("v.createdBy = :user ")
                         ->setParameter('user', $user);


        if($dateDebSearch!=null && $dateFinSearch!=null)
        {
           $query->andWhere("v.createdAt BETWEEN :dateDeb AND :dateFin")
                                  ->setParameter('dateDeb',  $dateDebSearch->format("Y-m-d")." 00:00:00")  
                          ->setParameter('dateFin', $dateFinSearch->format("Y-m-d")." 23:59:00");
        }   

        if( !empty($article ))
        {
            $query->andWhere('a = :article')
                            ->setParameter('article',  $article );
        }  


        return count($query->getQuery() ->getResult());  
     }

}
